{"version":3,"sources":["components/AnimatedText.tsx","styles/theme.ts","pages/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["AnimatedText","props","children","React","Children","toArray","trail","useTrail","length","config","mass","tension","friction","delay","opacity","toggled","x","maxHeight","from","className","map","index","rest","div","key","style","transform","interpolate","theme","createMuiTheme","fontFamilies","typography","fontFamily","join","h1","fontWeight","overrides","MuiCssBaseline","f","a","color","palette","primary","main","responsiveFontSizes","links","text","link","useStyles","makeStyles","heading","fontWeightBold","breakpoints","up","width","jobTitle","display","whiteSpace","content","bodyContainer","marginBottom","spacing","linkContainer","textDecoration","margin","Home","classes","Box","px","xs","lg","py","md","xl","pl","pr","sm","mb","Typography","variant","fontWeightLight","href","target","rel","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cf33dcd7.chunk.js","sourcesContent":["import React from 'react'\nimport { animated, interpolate, useTrail } from 'react-spring'\n\ninterface Props {\n  mass?: number\n  tension?: number\n  friction?: number\n  delay?: number\n  toggled: boolean\n}\n\nconst AnimatedText: React.FC<React.PropsWithChildren<Props>> = (\n  props: React.PropsWithChildren<Props>\n) => {\n  const children = React.Children.toArray(props.children)\n  const trail = useTrail(children.length, {\n    config: {\n      mass: props.mass ? props.mass : 5,\n      tension: props.tension ? props.tension : 2000,\n      friction: props.friction ? props.friction : 500,\n    },\n    delay: props.delay ? props.delay : 0,\n    opacity: props.toggled ? 1 : 0,\n    x: props.toggled ? 20 : 0,\n    maxHeight: props.toggled ? '100%' : '0%',\n    from: { opacity: 0, x: 20, maxHeight: '0%' },\n  })\n\n  return (\n    <div className=\"trails-main\">\n      <div>\n        {trail.map(({ x, maxHeight, ...rest }, index) => (\n          <animated.div\n            key={index}\n            className=\"trails-text\"\n            style={{\n              ...rest,\n              transform: interpolate([x], (x) => `translate3d(0,${x}px,0)`) as string,\n            }}\n          >\n            <animated.div style={{ maxHeight }}>{children[index]}</animated.div>\n          </animated.div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default AnimatedText\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core'\n\n// Initialize to get access to default variables in customizations\nlet theme = createMuiTheme()\n\nconst fontFamilies = ['Overpass']\n\ntheme = createMuiTheme({\n  typography: {\n    fontFamily: fontFamilies.join(','),\n    h1: {\n      fontWeight: 800,\n    },\n  },\n  overrides: {\n    MuiCssBaseline: {\n      '@global': {\n        '@font-face': fontFamilies.map((f) => {\n          return { fontFamily: f }\n        }),\n        a: {\n          color: theme.palette.primary.main,\n        },\n      },\n    },\n  },\n})\n\ntheme = responsiveFontSizes(theme)\nexport default theme\n","import { Box, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\n\nimport AnimatedText from '../components/AnimatedText'\nimport theme from '../styles/theme'\n\nconst links = [\n  {\n    text: 'Resume',\n    link: 'https://drive.google.com/file/d/1RPmhrS8cdSWuD1oc2I67fZ8mdYSVQ_Ek/view?usp=sharing',\n  },\n  {\n    text: 'LinkedIn',\n    link: 'https://linkedin.com/in/spark6',\n  },\n]\n\nconst useStyles = makeStyles((theme) => ({\n  heading: {\n    fontWeight: theme.typography.fontWeightBold,\n    [theme.breakpoints.up('md')]: {\n      width: '80%',\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: '60%',\n    },\n  },\n  jobTitle: {\n    display: 'inline-block',\n    color: theme.palette.primary.main,\n    whiteSpace: 'nowrap',\n    '&:before': {\n      content: '\" \"',\n    },\n    '&:after': {\n      content: '\" \"',\n    },\n  },\n  bodyContainer: {\n    marginBottom: theme.spacing(4),\n    '& p': {\n      marginBottom: theme.spacing(2),\n    },\n    [theme.breakpoints.up('md')]: {\n      width: '60%',\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: '40%',\n    },\n  },\n  linkContainer: {\n    display: 'inline-block',\n    '& a': {\n      textDecoration: 'none',\n    },\n    '&:not(:last-child):after': {\n      content: '\"/\"',\n      margin: `0 ${theme.spacing(0.5)}px`,\n    },\n  },\n}))\n\nconst Home: React.FunctionComponent = () => {\n  const classes = useStyles()\n  return (\n    <>\n      <Box\n        px={{ xs: 2, lg: 24 }}\n        py={{ xs: 6, md: 12, xl: 20 }}\n        pl={{ lg: 20, xl: 48 }}\n        pr={{ sm: 6, lg: 60 }}\n      >\n        <Box mb={4}>\n          <AnimatedText toggled>\n            <Typography variant=\"h5\" style={{ fontWeight: theme.typography.fontWeightLight }}>\n              Hey! Thanks for stopping by.\n            </Typography>\n          </AnimatedText>\n        </Box>\n        <Box mb={4}>\n          <AnimatedText toggled delay={1500}>\n            <Typography variant=\"h3\" className={classes.heading}>\n              My name is Sean Park, and I&apos;m a{' '}\n              <span className={classes.jobTitle}>Creative Technologist</span> at Deloitte Digital.\n            </Typography>\n          </AnimatedText>\n        </Box>\n        <Box pl={0.5} className={classes.bodyContainer}>\n          <AnimatedText toggled delay={3000}>\n            <Typography>\n              I&apos;m a UX Designer and Front-end Developer based in Chicago. I love tinkering with\n              new technologies, and building elegantly designed products with them.\n            </Typography>\n            <Typography>\n              My website is currently under construction, but will be here very soon with everything\n              about my past works and design / development process!\n            </Typography>\n            <Typography>\n              I&apos;m experimenting with{' '}\n              <a href=\"https://www.react-spring.io/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                React Spring\n              </a>{' '}\n              and a whole new stack behind the scenes, so it&apos;ll be bigger and better than ever\n              ðŸ’ª\n            </Typography>\n          </AnimatedText>\n        </Box>\n        <Box pl={0.5}>\n          <AnimatedText toggled delay={4500}>\n            <Typography>\n              {links.map((link, index) => (\n                <Box key={index} className={classes.linkContainer}>\n                  <a href={link.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {link.text}\n                  </a>\n                </Box>\n              ))}\n            </Typography>\n          </AnimatedText>\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nexport default Home\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Home from './pages/Home';\n\nconst App: React.FunctionComponent = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./index.css\";\n\nimport { CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport theme from \"./styles/theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}